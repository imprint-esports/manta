// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: dota_gcmessages_client_craftworks.proto

package dota

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgClientToGCCraftworksGetUserDataResponse_EResponse int32

const (
	CMsgClientToGCCraftworksGetUserDataResponse_k_eInternalError     CMsgClientToGCCraftworksGetUserDataResponse_EResponse = 0
	CMsgClientToGCCraftworksGetUserDataResponse_k_eSuccess           CMsgClientToGCCraftworksGetUserDataResponse_EResponse = 1
	CMsgClientToGCCraftworksGetUserDataResponse_k_eTooBusy           CMsgClientToGCCraftworksGetUserDataResponse_EResponse = 2
	CMsgClientToGCCraftworksGetUserDataResponse_k_eDisabled          CMsgClientToGCCraftworksGetUserDataResponse_EResponse = 3
	CMsgClientToGCCraftworksGetUserDataResponse_k_eTimeout           CMsgClientToGCCraftworksGetUserDataResponse_EResponse = 4
	CMsgClientToGCCraftworksGetUserDataResponse_k_eInvalidCraftworks CMsgClientToGCCraftworksGetUserDataResponse_EResponse = 5
	CMsgClientToGCCraftworksGetUserDataResponse_k_eExpiredCraftworks CMsgClientToGCCraftworksGetUserDataResponse_EResponse = 6
)

// Enum value maps for CMsgClientToGCCraftworksGetUserDataResponse_EResponse.
var (
	CMsgClientToGCCraftworksGetUserDataResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eInvalidCraftworks",
		6: "k_eExpiredCraftworks",
	}
	CMsgClientToGCCraftworksGetUserDataResponse_EResponse_value = map[string]int32{
		"k_eInternalError":     0,
		"k_eSuccess":           1,
		"k_eTooBusy":           2,
		"k_eDisabled":          3,
		"k_eTimeout":           4,
		"k_eInvalidCraftworks": 5,
		"k_eExpiredCraftworks": 6,
	}
)

func (x CMsgClientToGCCraftworksGetUserDataResponse_EResponse) Enum() *CMsgClientToGCCraftworksGetUserDataResponse_EResponse {
	p := new(CMsgClientToGCCraftworksGetUserDataResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCCraftworksGetUserDataResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCCraftworksGetUserDataResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_craftworks_proto_enumTypes[0].Descriptor()
}

func (CMsgClientToGCCraftworksGetUserDataResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_craftworks_proto_enumTypes[0]
}

func (x CMsgClientToGCCraftworksGetUserDataResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCCraftworksGetUserDataResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCCraftworksGetUserDataResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCCraftworksGetUserDataResponse_EResponse.Descriptor instead.
func (CMsgClientToGCCraftworksGetUserDataResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_craftworks_proto_rawDescGZIP(), []int{2, 0}
}

type CMsgClientToGCCraftworksCraftRecipeResponse_EResponse int32

const (
	CMsgClientToGCCraftworksCraftRecipeResponse_k_eInternalError           CMsgClientToGCCraftworksCraftRecipeResponse_EResponse = 0
	CMsgClientToGCCraftworksCraftRecipeResponse_k_eSuccess                 CMsgClientToGCCraftworksCraftRecipeResponse_EResponse = 1
	CMsgClientToGCCraftworksCraftRecipeResponse_k_eTooBusy                 CMsgClientToGCCraftworksCraftRecipeResponse_EResponse = 2
	CMsgClientToGCCraftworksCraftRecipeResponse_k_eDisabled                CMsgClientToGCCraftworksCraftRecipeResponse_EResponse = 3
	CMsgClientToGCCraftworksCraftRecipeResponse_k_eTimeout                 CMsgClientToGCCraftworksCraftRecipeResponse_EResponse = 4
	CMsgClientToGCCraftworksCraftRecipeResponse_k_eInvalidCraftworks       CMsgClientToGCCraftworksCraftRecipeResponse_EResponse = 5
	CMsgClientToGCCraftworksCraftRecipeResponse_k_eExpiredCraftworks       CMsgClientToGCCraftworksCraftRecipeResponse_EResponse = 6
	CMsgClientToGCCraftworksCraftRecipeResponse_k_eNotEnoughComponents     CMsgClientToGCCraftworksCraftRecipeResponse_EResponse = 7
	CMsgClientToGCCraftworksCraftRecipeResponse_k_eInvalidRecipe           CMsgClientToGCCraftworksCraftRecipeResponse_EResponse = 8
	CMsgClientToGCCraftworksCraftRecipeResponse_k_eRecipeTierLocked        CMsgClientToGCCraftworksCraftRecipeResponse_EResponse = 9
	CMsgClientToGCCraftworksCraftRecipeResponse_k_eAlreadyCraftedMaxAmount CMsgClientToGCCraftworksCraftRecipeResponse_EResponse = 10
)

// Enum value maps for CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.
var (
	CMsgClientToGCCraftworksCraftRecipeResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eTooBusy",
		3:  "k_eDisabled",
		4:  "k_eTimeout",
		5:  "k_eInvalidCraftworks",
		6:  "k_eExpiredCraftworks",
		7:  "k_eNotEnoughComponents",
		8:  "k_eInvalidRecipe",
		9:  "k_eRecipeTierLocked",
		10: "k_eAlreadyCraftedMaxAmount",
	}
	CMsgClientToGCCraftworksCraftRecipeResponse_EResponse_value = map[string]int32{
		"k_eInternalError":           0,
		"k_eSuccess":                 1,
		"k_eTooBusy":                 2,
		"k_eDisabled":                3,
		"k_eTimeout":                 4,
		"k_eInvalidCraftworks":       5,
		"k_eExpiredCraftworks":       6,
		"k_eNotEnoughComponents":     7,
		"k_eInvalidRecipe":           8,
		"k_eRecipeTierLocked":        9,
		"k_eAlreadyCraftedMaxAmount": 10,
	}
)

func (x CMsgClientToGCCraftworksCraftRecipeResponse_EResponse) Enum() *CMsgClientToGCCraftworksCraftRecipeResponse_EResponse {
	p := new(CMsgClientToGCCraftworksCraftRecipeResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCCraftworksCraftRecipeResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCCraftworksCraftRecipeResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_craftworks_proto_enumTypes[1].Descriptor()
}

func (CMsgClientToGCCraftworksCraftRecipeResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_craftworks_proto_enumTypes[1]
}

func (x CMsgClientToGCCraftworksCraftRecipeResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCCraftworksCraftRecipeResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCCraftworksCraftRecipeResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.Descriptor instead.
func (CMsgClientToGCCraftworksCraftRecipeResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_craftworks_proto_rawDescGZIP(), []int{5, 0}
}

type CMsgClientToGCCraftworksDevModifyComponents_EOperation int32

const (
	CMsgClientToGCCraftworksDevModifyComponents_k_eAddComponents      CMsgClientToGCCraftworksDevModifyComponents_EOperation = 1
	CMsgClientToGCCraftworksDevModifyComponents_k_eSubtractComponents CMsgClientToGCCraftworksDevModifyComponents_EOperation = 2
)

// Enum value maps for CMsgClientToGCCraftworksDevModifyComponents_EOperation.
var (
	CMsgClientToGCCraftworksDevModifyComponents_EOperation_name = map[int32]string{
		1: "k_eAddComponents",
		2: "k_eSubtractComponents",
	}
	CMsgClientToGCCraftworksDevModifyComponents_EOperation_value = map[string]int32{
		"k_eAddComponents":      1,
		"k_eSubtractComponents": 2,
	}
)

func (x CMsgClientToGCCraftworksDevModifyComponents_EOperation) Enum() *CMsgClientToGCCraftworksDevModifyComponents_EOperation {
	p := new(CMsgClientToGCCraftworksDevModifyComponents_EOperation)
	*p = x
	return p
}

func (x CMsgClientToGCCraftworksDevModifyComponents_EOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCCraftworksDevModifyComponents_EOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_craftworks_proto_enumTypes[2].Descriptor()
}

func (CMsgClientToGCCraftworksDevModifyComponents_EOperation) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_craftworks_proto_enumTypes[2]
}

func (x CMsgClientToGCCraftworksDevModifyComponents_EOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCCraftworksDevModifyComponents_EOperation) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCCraftworksDevModifyComponents_EOperation(num)
	return nil
}

// Deprecated: Use CMsgClientToGCCraftworksDevModifyComponents_EOperation.Descriptor instead.
func (CMsgClientToGCCraftworksDevModifyComponents_EOperation) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_craftworks_proto_rawDescGZIP(), []int{6, 0}
}

type CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse int32

const (
	CMsgClientToGCCraftworksDevModifyComponentsResponse_k_eInternalError     CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse = 0
	CMsgClientToGCCraftworksDevModifyComponentsResponse_k_eSuccess           CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse = 1
	CMsgClientToGCCraftworksDevModifyComponentsResponse_k_eTooBusy           CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse = 2
	CMsgClientToGCCraftworksDevModifyComponentsResponse_k_eDisabled          CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse = 3
	CMsgClientToGCCraftworksDevModifyComponentsResponse_k_eTimeout           CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse = 4
	CMsgClientToGCCraftworksDevModifyComponentsResponse_k_eInvalidCraftworks CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse = 5
	CMsgClientToGCCraftworksDevModifyComponentsResponse_k_eNotAllowed        CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse = 6
)

// Enum value maps for CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.
var (
	CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eInvalidCraftworks",
		6: "k_eNotAllowed",
	}
	CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse_value = map[string]int32{
		"k_eInternalError":     0,
		"k_eSuccess":           1,
		"k_eTooBusy":           2,
		"k_eDisabled":          3,
		"k_eTimeout":           4,
		"k_eInvalidCraftworks": 5,
		"k_eNotAllowed":        6,
	}
)

func (x CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse) Enum() *CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse {
	p := new(CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_craftworks_proto_enumTypes[3].Descriptor()
}

func (CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_craftworks_proto_enumTypes[3]
}

func (x CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.Descriptor instead.
func (CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_craftworks_proto_rawDescGZIP(), []int{7, 0}
}

type CMsgCraftworksUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComponentInventory *CMsgCraftworksComponents `protobuf:"bytes,1,opt,name=component_inventory,json=componentInventory" json:"component_inventory,omitempty"`
}

func (x *CMsgCraftworksUserData) Reset() {
	*x = CMsgCraftworksUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCraftworksUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCraftworksUserData) ProtoMessage() {}

func (x *CMsgCraftworksUserData) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCraftworksUserData.ProtoReflect.Descriptor instead.
func (*CMsgCraftworksUserData) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_craftworks_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgCraftworksUserData) GetComponentInventory() *CMsgCraftworksComponents {
	if x != nil {
		return x.ComponentInventory
	}
	return nil
}

type CMsgClientToGCCraftworksGetUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CraftworksId *uint32 `protobuf:"varint,1,opt,name=craftworks_id,json=craftworksId" json:"craftworks_id,omitempty"`
}

func (x *CMsgClientToGCCraftworksGetUserData) Reset() {
	*x = CMsgClientToGCCraftworksGetUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCCraftworksGetUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCCraftworksGetUserData) ProtoMessage() {}

func (x *CMsgClientToGCCraftworksGetUserData) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCCraftworksGetUserData.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCCraftworksGetUserData) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_craftworks_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgClientToGCCraftworksGetUserData) GetCraftworksId() uint32 {
	if x != nil && x.CraftworksId != nil {
		return *x.CraftworksId
	}
	return 0
}

type CMsgClientToGCCraftworksGetUserDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCCraftworksGetUserDataResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCCraftworksGetUserDataResponse_EResponse" json:"response,omitempty"`
	UserData *CMsgCraftworksUserData                                `protobuf:"bytes,2,opt,name=user_data,json=userData" json:"user_data,omitempty"`
}

func (x *CMsgClientToGCCraftworksGetUserDataResponse) Reset() {
	*x = CMsgClientToGCCraftworksGetUserDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCCraftworksGetUserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCCraftworksGetUserDataResponse) ProtoMessage() {}

func (x *CMsgClientToGCCraftworksGetUserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCCraftworksGetUserDataResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCCraftworksGetUserDataResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_craftworks_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgClientToGCCraftworksGetUserDataResponse) GetResponse() CMsgClientToGCCraftworksGetUserDataResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCCraftworksGetUserDataResponse_k_eInternalError
}

func (x *CMsgClientToGCCraftworksGetUserDataResponse) GetUserData() *CMsgCraftworksUserData {
	if x != nil {
		return x.UserData
	}
	return nil
}

type CMsgGCToClientCraftworksUserDataUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CraftworksId *uint32                 `protobuf:"varint,1,opt,name=craftworks_id,json=craftworksId" json:"craftworks_id,omitempty"`
	UserData     *CMsgCraftworksUserData `protobuf:"bytes,2,opt,name=user_data,json=userData" json:"user_data,omitempty"`
}

func (x *CMsgGCToClientCraftworksUserDataUpdated) Reset() {
	*x = CMsgGCToClientCraftworksUserDataUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientCraftworksUserDataUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientCraftworksUserDataUpdated) ProtoMessage() {}

func (x *CMsgGCToClientCraftworksUserDataUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientCraftworksUserDataUpdated.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientCraftworksUserDataUpdated) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_craftworks_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgGCToClientCraftworksUserDataUpdated) GetCraftworksId() uint32 {
	if x != nil && x.CraftworksId != nil {
		return *x.CraftworksId
	}
	return 0
}

func (x *CMsgGCToClientCraftworksUserDataUpdated) GetUserData() *CMsgCraftworksUserData {
	if x != nil {
		return x.UserData
	}
	return nil
}

type CMsgClientToGCCraftworksCraftRecipe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CraftworksId *uint32 `protobuf:"varint,1,opt,name=craftworks_id,json=craftworksId" json:"craftworks_id,omitempty"`
	RecipeId     *uint64 `protobuf:"varint,2,opt,name=recipe_id,json=recipeId" json:"recipe_id,omitempty"`
}

func (x *CMsgClientToGCCraftworksCraftRecipe) Reset() {
	*x = CMsgClientToGCCraftworksCraftRecipe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCCraftworksCraftRecipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCCraftworksCraftRecipe) ProtoMessage() {}

func (x *CMsgClientToGCCraftworksCraftRecipe) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCCraftworksCraftRecipe.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCCraftworksCraftRecipe) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_craftworks_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgClientToGCCraftworksCraftRecipe) GetCraftworksId() uint32 {
	if x != nil && x.CraftworksId != nil {
		return *x.CraftworksId
	}
	return 0
}

func (x *CMsgClientToGCCraftworksCraftRecipe) GetRecipeId() uint64 {
	if x != nil && x.RecipeId != nil {
		return *x.RecipeId
	}
	return 0
}

type CMsgClientToGCCraftworksCraftRecipeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response      *CMsgClientToGCCraftworksCraftRecipeResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCCraftworksCraftRecipeResponse_EResponse" json:"response,omitempty"`
	ClaimResponse *CMsgDOTAClaimEventActionResponse                      `protobuf:"bytes,2,opt,name=claim_response,json=claimResponse" json:"claim_response,omitempty"`
}

func (x *CMsgClientToGCCraftworksCraftRecipeResponse) Reset() {
	*x = CMsgClientToGCCraftworksCraftRecipeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCCraftworksCraftRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCCraftworksCraftRecipeResponse) ProtoMessage() {}

func (x *CMsgClientToGCCraftworksCraftRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCCraftworksCraftRecipeResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCCraftworksCraftRecipeResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_craftworks_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgClientToGCCraftworksCraftRecipeResponse) GetResponse() CMsgClientToGCCraftworksCraftRecipeResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCCraftworksCraftRecipeResponse_k_eInternalError
}

func (x *CMsgClientToGCCraftworksCraftRecipeResponse) GetClaimResponse() *CMsgDOTAClaimEventActionResponse {
	if x != nil {
		return x.ClaimResponse
	}
	return nil
}

type CMsgClientToGCCraftworksDevModifyComponents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CraftworksId *uint32                                                 `protobuf:"varint,1,opt,name=craftworks_id,json=craftworksId" json:"craftworks_id,omitempty"`
	Components   *CMsgCraftworksComponents                               `protobuf:"bytes,2,opt,name=components" json:"components,omitempty"`
	Operation    *CMsgClientToGCCraftworksDevModifyComponents_EOperation `protobuf:"varint,3,opt,name=operation,enum=dota.CMsgClientToGCCraftworksDevModifyComponents_EOperation" json:"operation,omitempty"`
}

func (x *CMsgClientToGCCraftworksDevModifyComponents) Reset() {
	*x = CMsgClientToGCCraftworksDevModifyComponents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCCraftworksDevModifyComponents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCCraftworksDevModifyComponents) ProtoMessage() {}

func (x *CMsgClientToGCCraftworksDevModifyComponents) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCCraftworksDevModifyComponents.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCCraftworksDevModifyComponents) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_craftworks_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgClientToGCCraftworksDevModifyComponents) GetCraftworksId() uint32 {
	if x != nil && x.CraftworksId != nil {
		return *x.CraftworksId
	}
	return 0
}

func (x *CMsgClientToGCCraftworksDevModifyComponents) GetComponents() *CMsgCraftworksComponents {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *CMsgClientToGCCraftworksDevModifyComponents) GetOperation() CMsgClientToGCCraftworksDevModifyComponents_EOperation {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return CMsgClientToGCCraftworksDevModifyComponents_k_eAddComponents
}

type CMsgClientToGCCraftworksDevModifyComponentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse" json:"response,omitempty"`
}

func (x *CMsgClientToGCCraftworksDevModifyComponentsResponse) Reset() {
	*x = CMsgClientToGCCraftworksDevModifyComponentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCCraftworksDevModifyComponentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCCraftworksDevModifyComponentsResponse) ProtoMessage() {}

func (x *CMsgClientToGCCraftworksDevModifyComponentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_craftworks_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCCraftworksDevModifyComponentsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCCraftworksDevModifyComponentsResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_craftworks_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgClientToGCCraftworksDevModifyComponentsResponse) GetResponse() CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCCraftworksDevModifyComponentsResponse_k_eInternalError
}

var File_dota_gcmessages_client_craftworks_proto protoreflect.FileDescriptor

var file_dota_gcmessages_client_craftworks_proto_rawDesc = []byte{
	0x0a, 0x27, 0x64, 0x6f, 0x74, 0x61, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x64, 0x6f, 0x74, 0x61, 0x1a,
	0x13, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x64, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x64,
	0x6f, 0x74, 0x61, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x64, 0x6f, 0x74,
	0x61, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x77, 0x65, 0x62,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x63, 0x73, 0x64, 0x6b,
	0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x65, 0x63, 0x6f, 0x6e, 0x5f, 0x67,
	0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x64, 0x6f, 0x74, 0x61, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x76,
	0x61, 0x6c, 0x76, 0x65, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x64, 0x6f, 0x74, 0x61, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x61,
	0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x69, 0x0a,
	0x16, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x4a, 0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x72, 0x61, 0x66, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x49, 0x64, 0x22, 0xda, 0x02, 0x0a, 0x2b, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x72, 0x61, 0x66,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x61, 0x66,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x96, 0x01, 0x0a, 0x09, 0x45, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b,
	0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x18, 0x0a,
	0x14, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x72, 0x61, 0x66, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x43, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x10,
	0x06, 0x22, 0x89, 0x01, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a,
	0x23, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x43,
	0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x43, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x72, 0x61,
	0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x49, 0x64, 0x22, 0xd9, 0x03, 0x0a, 0x2b, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x43, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x72,
	0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x43, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x44, 0x4f, 0x54, 0x41, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x81,
	0x02, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x43, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x10, 0x05, 0x12, 0x18, 0x0a,
	0x14, 0x6b, 0x5f, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x43, 0x72, 0x61, 0x66, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x6b, 0x5f, 0x65, 0x4e, 0x6f,
	0x74, 0x45, 0x6e, 0x6f, 0x75, 0x67, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x54, 0x69, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x10, 0x09, 0x12, 0x1e, 0x0a, 0x1a, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x43, 0x72, 0x61, 0x66, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x10, 0x0a, 0x22, 0xad, 0x02, 0x0a, 0x2b, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x44,
	0x65, 0x76, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x72, 0x61, 0x66, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x5a, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x43, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x44, 0x65, 0x76, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x3d, 0x0a, 0x0a, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x53, 0x75,
	0x62, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x10, 0x02, 0x22, 0xa8, 0x02, 0x0a, 0x33, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x44,
	0x65, 0x76, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x43, 0x72, 0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x44, 0x65, 0x76, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x09,
	0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12,
	0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03,
	0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04,
	0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x72,
	0x61, 0x66, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f,
	0x65, 0x4e, 0x6f, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10, 0x06, 0x42, 0x25, 0x5a,
	0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x74, 0x61,
	0x62, 0x75, 0x66, 0x66, 0x2f, 0x6d, 0x61, 0x6e, 0x74, 0x61, 0x2f, 0x64, 0x6f, 0x74, 0x61, 0x3b,
	0x64, 0x6f, 0x74, 0x61,
}

var (
	file_dota_gcmessages_client_craftworks_proto_rawDescOnce sync.Once
	file_dota_gcmessages_client_craftworks_proto_rawDescData = file_dota_gcmessages_client_craftworks_proto_rawDesc
)

func file_dota_gcmessages_client_craftworks_proto_rawDescGZIP() []byte {
	file_dota_gcmessages_client_craftworks_proto_rawDescOnce.Do(func() {
		file_dota_gcmessages_client_craftworks_proto_rawDescData = protoimpl.X.CompressGZIP(file_dota_gcmessages_client_craftworks_proto_rawDescData)
	})
	return file_dota_gcmessages_client_craftworks_proto_rawDescData
}

var file_dota_gcmessages_client_craftworks_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_dota_gcmessages_client_craftworks_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_dota_gcmessages_client_craftworks_proto_goTypes = []interface{}{
	(CMsgClientToGCCraftworksGetUserDataResponse_EResponse)(0),         // 0: dota.CMsgClientToGCCraftworksGetUserDataResponse.EResponse
	(CMsgClientToGCCraftworksCraftRecipeResponse_EResponse)(0),         // 1: dota.CMsgClientToGCCraftworksCraftRecipeResponse.EResponse
	(CMsgClientToGCCraftworksDevModifyComponents_EOperation)(0),        // 2: dota.CMsgClientToGCCraftworksDevModifyComponents.EOperation
	(CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse)(0), // 3: dota.CMsgClientToGCCraftworksDevModifyComponentsResponse.EResponse
	(*CMsgCraftworksUserData)(nil),                                     // 4: dota.CMsgCraftworksUserData
	(*CMsgClientToGCCraftworksGetUserData)(nil),                        // 5: dota.CMsgClientToGCCraftworksGetUserData
	(*CMsgClientToGCCraftworksGetUserDataResponse)(nil),                // 6: dota.CMsgClientToGCCraftworksGetUserDataResponse
	(*CMsgGCToClientCraftworksUserDataUpdated)(nil),                    // 7: dota.CMsgGCToClientCraftworksUserDataUpdated
	(*CMsgClientToGCCraftworksCraftRecipe)(nil),                        // 8: dota.CMsgClientToGCCraftworksCraftRecipe
	(*CMsgClientToGCCraftworksCraftRecipeResponse)(nil),                // 9: dota.CMsgClientToGCCraftworksCraftRecipeResponse
	(*CMsgClientToGCCraftworksDevModifyComponents)(nil),                // 10: dota.CMsgClientToGCCraftworksDevModifyComponents
	(*CMsgClientToGCCraftworksDevModifyComponentsResponse)(nil),        // 11: dota.CMsgClientToGCCraftworksDevModifyComponentsResponse
	(*CMsgCraftworksComponents)(nil),                                   // 12: dota.CMsgCraftworksComponents
	(*CMsgDOTAClaimEventActionResponse)(nil),                           // 13: dota.CMsgDOTAClaimEventActionResponse
}
var file_dota_gcmessages_client_craftworks_proto_depIdxs = []int32{
	12, // 0: dota.CMsgCraftworksUserData.component_inventory:type_name -> dota.CMsgCraftworksComponents
	0,  // 1: dota.CMsgClientToGCCraftworksGetUserDataResponse.response:type_name -> dota.CMsgClientToGCCraftworksGetUserDataResponse.EResponse
	4,  // 2: dota.CMsgClientToGCCraftworksGetUserDataResponse.user_data:type_name -> dota.CMsgCraftworksUserData
	4,  // 3: dota.CMsgGCToClientCraftworksUserDataUpdated.user_data:type_name -> dota.CMsgCraftworksUserData
	1,  // 4: dota.CMsgClientToGCCraftworksCraftRecipeResponse.response:type_name -> dota.CMsgClientToGCCraftworksCraftRecipeResponse.EResponse
	13, // 5: dota.CMsgClientToGCCraftworksCraftRecipeResponse.claim_response:type_name -> dota.CMsgDOTAClaimEventActionResponse
	12, // 6: dota.CMsgClientToGCCraftworksDevModifyComponents.components:type_name -> dota.CMsgCraftworksComponents
	2,  // 7: dota.CMsgClientToGCCraftworksDevModifyComponents.operation:type_name -> dota.CMsgClientToGCCraftworksDevModifyComponents.EOperation
	3,  // 8: dota.CMsgClientToGCCraftworksDevModifyComponentsResponse.response:type_name -> dota.CMsgClientToGCCraftworksDevModifyComponentsResponse.EResponse
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_dota_gcmessages_client_craftworks_proto_init() }
func file_dota_gcmessages_client_craftworks_proto_init() {
	if File_dota_gcmessages_client_craftworks_proto != nil {
		return
	}
	file_steammessages_proto_init()
	file_dota_shared_enums_proto_init()
	file_dota_gcmessages_common_proto_init()
	file_dota_gcmessages_webapi_proto_init()
	file_gcsdk_gcmessages_proto_init()
	file_base_gcmessages_proto_init()
	file_econ_gcmessages_proto_init()
	file_dota_gcmessages_client_proto_init()
	file_valveextensions_proto_init()
	file_dota_gcmessages_common_craftworks_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dota_gcmessages_client_craftworks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgCraftworksUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_craftworks_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCCraftworksGetUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_craftworks_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCCraftworksGetUserDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_craftworks_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToClientCraftworksUserDataUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_craftworks_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCCraftworksCraftRecipe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_craftworks_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCCraftworksCraftRecipeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_craftworks_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCCraftworksDevModifyComponents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_craftworks_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCCraftworksDevModifyComponentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dota_gcmessages_client_craftworks_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dota_gcmessages_client_craftworks_proto_goTypes,
		DependencyIndexes: file_dota_gcmessages_client_craftworks_proto_depIdxs,
		EnumInfos:         file_dota_gcmessages_client_craftworks_proto_enumTypes,
		MessageInfos:      file_dota_gcmessages_client_craftworks_proto_msgTypes,
	}.Build()
	File_dota_gcmessages_client_craftworks_proto = out.File
	file_dota_gcmessages_client_craftworks_proto_rawDesc = nil
	file_dota_gcmessages_client_craftworks_proto_goTypes = nil
	file_dota_gcmessages_client_craftworks_proto_depIdxs = nil
}
